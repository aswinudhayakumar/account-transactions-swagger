openapi: 3.0.3
info:
  description: "This is a swagger API documentation for the application [account-transactions](https://github.com/aswinudhayakumar/account-transactions). You can find all the available endpoints and its usages here."
  version: "0.0.1"
  title: "API-spec for account-transactions."
servers:
  - url: "http://localhost:8080/app/v1"
    description: "Development server (HTTP)"
tags:
  - name: "accounts"
    description: "Accounts related APIs"
  - name: "transactions"
    description: "Transactions related APIs"
paths:
  /accounts:
    post:
      tags:
        - "accounts"
      summary: "Create a new Account."
      description: "This API provides a functionality to create a new Account."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccount"
      responses:
        "200":
          description: "Account created successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericCreateSuccess"
        "400":
          description: "Invalid request provided."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "500":
          description: "Internal server error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnexpectedError"

  /accounts/{id}:
    get:
      tags:
        - "accounts"
      summary: "Get Account data using the Account ID."
      description: "This API provides a functionality to get Account data using Account ID."
      parameters:
        - name: "id"
          in: "path"
          description: "The Account ID for the Account that needs to be fetched."
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Account retrieved successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAccountSuccess"
        "400":
          description: "Invalid request provided."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "404":
          description: "Requested data not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataNotFoundError"
        "500":
          description: "Internal server error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnexpectedError"

  /transactions:
    post:
      tags:
        - "transactions"
      summary: "Create a new transaction."
      description: "This API provides a functionality to create a new Transaction."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createTransaction"
      responses:
        "200":
          description: "Transaction created successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericCreateSuccess"
        "400":
          description: "Invalid request provided."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "500":
          description: "Internal server error."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnexpectedError"

components:
  schemas:
    # Request Schemas
    CreateAccount:
      type: "object"
      required:
        - document_number
      properties:
        document_number:
          type: "string"
          example: "1234567890"

    createTransaction:
      type: "object"
      required:
        - account_id
        - operation_type_id
        - amount
      properties:
        account_id:
          type: "integer"
          example: 1
        operation_type_id:
          type: "integer"
          example: 1
        amount:
          type: "number"
          format: "float"
          example: 100.1234

    # Success Response Schemas
    GenericCreateSuccess:
      type: "object"
      properties:
        status:
          type: "string"
          example: "success"

    GetAccountSuccess:
      type: "object"
      properties:
        account_id:
          type: "integer"
          example: 1
        document_number:
          type: "string"
          example: "123123"
        created_at:
          type: "string"
          format: "date-time"
          example: "2025-01-19T06:34:26Z"
        updated_at:
          type: "string"
          format: "date-time"
          example: "2025-01-19T06:34:26Z"

    # Error Response Schemas
    BadRequestError:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            id:
              type: "string"
              example: "01947d29-be0a-7dee-9152-dcd2fa85dca4"
            code:
              type: "string"
              example: "invalid_request"
            title:
              type: "string"
              example: "Validation Failed"
            detail:
              type: "string"
              example: "field: invalid field provided"
            status:
              type: "integer"
              format: "int"
              example: 400

    DataNotFoundError:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            id:
              type: "string"
              example: "01947d29-be0a-7dee-9152-dcd2fa85dca4"
            code:
              type: "string"
              example: "data_not_found"
            title:
              type: "string"
              example: "Requested Data Not Found"
            detail:
              type: "string"
              example: "sql: no rows in result set"
            status:
              type: "integer"
              format: "int"
              example: 404

    UnexpectedError:
      type: "object"
      properties:
        errors:
          type: "object"
          properties:
            id:
              type: "string"
              example: "01947d29-be0a-7dee-9152-dcd2fa85dca4"
            code:
              type: "string"
              example: "unexpected_error"
            title:
              type: "string"
              example: "Unexpected Error"
            detail:
              type: "string"
              example: "some unexpected error"
            status:
              type: "integer"
              format: "int"
              example: 500
